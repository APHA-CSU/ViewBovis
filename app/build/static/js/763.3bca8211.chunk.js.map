{"version":3,"file":"static/js/763.3bca8211.chunk.js","mappings":"uyxHAIA,MA8DA,EA9DsBA,IAAoB,IAAnB,UAAEC,GAAWD,EAClC,MAAME,GAAMC,EAAAA,EAAAA,MACNC,EAAc,SAAUC,GAC5B,OAAQA,GACN,IAAK,QACH,MAAO,MACT,IAAK,QACH,MAAO,OACT,IAAK,QACH,MAAO,SACT,IAAK,QACH,MAAO,SACT,IAAK,QACH,MAAO,OACT,IAAK,QACH,MAAO,SACT,QACE,MAAO,QAEb,EAYMC,EAAgBC,IAAAA,QAAU,CAAEC,SAAU,gBAC5CF,EAAcG,MAAQ,SAAUP,GAC9B,IAAIQ,EAAMH,IAAAA,QAAUI,OAAO,MAAO,eAClC,MAAMC,EAAW,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,SACzDC,EAAU,CAAC,MAAO,OAAQ,SAAU,SAAU,OAAQ,UAK5DH,EAAII,mBAAmB,aAAc,iCACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IACnCL,EAAII,mBACF,YACC,yBAAwBD,EAAQE,aAAaH,EAASG,WAG3D,OAAOL,CACT,EACA,MAAMO,EAAgBV,IAAAA,QAAUW,EAAc,CAAEC,MA5BvB,SAAUC,GACjC,MAAO,CACLC,UAAWjB,EAAYgB,EAAQE,WAAWC,MAC1CC,OAAQ,IACRC,QAAS,EACTC,MAAO,QACPC,UAAW,IACXC,YAAa,GAEjB,KAoBAC,EAAAA,EAAAA,YAAU,KACJ5B,IACFgB,EAAca,MAAM5B,GACpBI,EAAcwB,MAAM5B,IAEf,KACLA,EAAI6B,YAAYd,GAChBf,EAAI8B,cAAc1B,EAAc,IAEjC,CAACL,GAAW,C","sources":["components/Layers/HotspotLayers.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport hotspotsJson from \"../../data/Hotspots.json\";\nimport { useMap } from \"react-leaflet\";\nimport L from \"leaflet\";\nconst HotspotLayers = ({ isChecked }) => {\n  const map = useMap();\n  const hotspotCols = function (area) {\n    switch (area) {\n      case \"HS 28\":\n        return \"red\";\n      case \"HS 27\":\n        return \"blue\";\n      case \"HS 26\":\n        return \"orange\";\n      case \"HS 23\":\n        return \"yellow\";\n      case \"HS 21\":\n        return \"pink\";\n      case \"HS 29\":\n        return \"purple\";\n      default:\n        return \"black\";\n    }\n  };\n\n  const stylehotspotPoly = function (feature) {\n    return {\n      fillColor: hotspotCols(feature.properties.Name),\n      weight: 1.5,\n      opacity: 1,\n      color: \"white\",\n      dashArray: \"3\",\n      fillOpacity: 0.5,\n    };\n  };\n  const hotspotLegend = L.control({ position: \"bottomright\" });\n  hotspotLegend.onAdd = function (map) {\n    let div = L.DomUtil.create(\"div\", \"info legend\");\n    const category = [\"HS 28\", \"HS 27\", \"HS 26\", \"HS 23\", \"HS 21\", \"HS 29\"];\n    const colours = [\"red\", \"blue\", \"orange\", \"yellow\", \"pink\", \"purple\"];\n\n    // Build legend: loop through levels and generate a label with a colored square\n\n    // Add each category to legend\n    div.insertAdjacentHTML(\"afterbegin\", \"<strong>Hotspots</strong><br>\");\n    for (let i = 0; i < category.length; i++)\n      div.insertAdjacentHTML(\n        \"beforeend\",\n        `<i style=\"background: ${colours[i]};\"></i> ${category[i]} <br>`\n      );\n\n    return div;\n  };\n  const hotspotLayers = L.geoJSON(hotspotsJson, { style: stylehotspotPoly });\n  useEffect(() => {\n    if (isChecked) {\n      hotspotLayers.addTo(map);\n      hotspotLegend.addTo(map);\n    }\n    return () => {\n      map.removeLayer(hotspotLayers);\n      map.removeControl(hotspotLegend);\n    };\n  }, [isChecked]);\n};\n\nexport default HotspotLayers;\n"],"names":["_ref","isChecked","map","useMap","hotspotCols","area","hotspotLegend","L","position","onAdd","div","create","category","colours","insertAdjacentHTML","i","length","hotspotLayers","hotspotsJson","style","feature","fillColor","properties","Name","weight","opacity","color","dashArray","fillOpacity","useEffect","addTo","removeLayer","removeControl"],"sourceRoot":""}