"use strict";(self.webpackChunkfront_end=self.webpackChunkfront_end||[]).push([[88],{3088:(n,t,e)=>{e.r(t),e.d(t,{default:()=>A});var s=e(9419),o=e(9349),a=e(6036),r=e(9896),i=(e(6433),e(228)),c=e.n(i),d=e(5043);const l=e.p+"static/media/SNPsoi.9c9a73af37ef4ab3fbcb1a7e586ef58c.svg";const p=e.p+"static/media/SNPrelated.3d6ef995b712704d8be98d53fc8be63f.svg",g=(n,t)=>{return n.submission===t?new(c().Icon)({className:"number-marker marker-SOI marker-".concat(n.submission),iconUrl:l,iconSize:[40,40],iconAnchor:[20,35]}):new(c().DivIcon)({className:"number-marker-related marker-".concat(n.submission),html:(e=n.snp_distance,'\n  <div style="font-size: medium;\n  color: white;\n  font-weight: 500;\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  align-content: center;\n  justify-content: center;\n  align-items: center;\n"><img src="'.concat(p,'" alt="').concat(e,'" width="30" height="30"/>\n<a style="position: absolute;">').concat(e,"</a><div/>")),styles:{border:"none",background:"transparent",display:"flex"},iconSize:[40,40],iconAnchor:[20,28]});var e};var m=e(5936),u=e.n(m),b=e(1628),f=e(1398),h=e(1763),y=e(8814),x=e(9837),v=e(900),S=e(8495),k=e(2242),j=e(4556),w=e(5579),_=e(579);const O=n=>{let{SNPMapDataset:t,openTable:e,mapRef:s}=n;const o=(0,j.wA)(),a=(0,r.ko)(),i=new ResizeObserver((()=>{a&&s.current&&a.invalidateSize()})),g=new(c().Control)({position:"topright"});g.onAdd=function(n){const t=c().DomUtil.create("div","leaflet-control leaflet-bar");return t.setAttribute("id","btn__show-table"),t.onclick=function(){o((0,w.SE)())},e?t.insertAdjacentHTML("afterbegin",'<a class="snp-table-toggle">Hide Table</a>'):t.insertAdjacentHTML("afterbegin",'<a class="snp-table-toggle">Show Table</a>'),t};const m=new(c().control)({position:"topright"});m.onAdd=function(n){let t=c().DomUtil.create("div","leaflet-control leaflet-bar");return t.style.width="150px",t.style.background="white",t.insertAdjacentHTML("afterbegin",'\n    <div style="padding-top:5px;">\n        <span class="fs-6" style="padding-left:6px;"><strong>Legend</strong></span>\n        <span style="display: flex; align-items: center; padding-bottom: 5px;">\n          <img src='.concat(l,' class="legend-marker-img">\n          <span class="legend-marker-title">Sample</span>\n        </span>\n        <span style="display: flex; align-items: center; padding-bottom: 5px;padding-left: 8px;">\n        <img src=').concat(p,' width="25" height="25">\n          <span class="legend-marker-title">SNP Relatedness</span>\n        </span>\n        <span style="display: flex; align-items: center;">\n        <img src=').concat(S.A,' class="legend-marker-img">\n        <span class="legend-marker-title">Geographic Group</span>\n        </span>\n      </div>\n    ')),t},(0,d.useEffect)((()=>{const n=Object.keys(t).filter((n=>{var e,s;return(null===(e=t[n])||void 0===e?void 0:e.lat)&&(null===(s=t[n])||void 0===s?void 0:s.lon)})).map((n=>[t[n].lat,t[n].lon]));return(null===n||void 0===n?void 0:n.length)>0&&(m.addTo(a),a.fitBounds(c().latLngBounds(n).pad(.1))),()=>{m.remove()}}),[t]),(0,d.useEffect)((()=>(g.addTo(a),()=>{g.remove()})),[e]),(0,d.useEffect)((()=>(s.current&&i.observe(s.current),()=>{i.disconnect()})),[])},A=n=>{let{checkedLayers:t,useCountyandHotspotLayers:e,setOpenSideBar:r,openSideBar:i,SNPMapDataset:l}=n;const p=(0,j.d4)((n=>n.counter.openSNPTable)),m=(0,d.useRef)(null),S=function(n,t){return'\n      <div class="fs-5 fw-bold">'.concat(n.animal_id,'</div><br>\n        <div id="popTabContent">     \n          <table class="table table-striped">\n            <tbody>\n              <tr>\n                <td><strong>Submission:</strong></td>\n                <td>').concat(t,"</td> \n              </tr>\n              <tr>\n                <td><strong>Date of Birth:</strong></td>\n                <td>").concat(n.dob,"</td>\n              </tr>\n              <tr>\n                <td><strong>Slaughter Date:</strong></td>\n                <td>").concat(n.slaughter_date,"</td>\n              </tr>\n              <tr>\n                <td><strong>Miles:</strong></td>\n                <td>").concat(parseFloat(n.distance).toFixed(2),"</td>\n              </tr>\n              <tr>\n                <td><strong>SNP Distance:</strong></td>\n                <td>").concat(n.snp_distance,"</td>\n              </tr>\n              <tr>\n                <td><strong>Precise Location:</strong></td>\n                <td>").concat(n.cph,"</td> \n              </tr>\n              <tr>\n                <td><strong>OS Map Reference:</strong></td>\n                <td>").concat(n.os_map_ref,"</td>\n              </tr>\n              <tr>\n                <td><strong>Species:</strong></td>\n                <td>").concat(n.species,"</td> \n              </tr>\n              <tr>\n                <td><strong>Animal Type:</strong></td>\n                <td>").concat(n.animal_type,"</td> \n              </tr>\n              <tr>\n                <td><strong>Sex:</strong></td>\n                <td>").concat("F"==n.sex?"Female":"M"==n.sex?"Male":"Unknown","\n                </td>\n              </tr> \n              <tr>\n                <td><strong>Disclosing Test Type:</strong></td>\n                <td>").concat(n.disclosing_test,"</td>\n              </tr> \n              <tr>\n                <td><strong>Import Country:</strong></td>\n                <td>").concat(null==n.import_country?"British":"".concat(n.import_country),"</td>\n              </tr> \n            </tbody>\n          </table>\n        </div>\n      </div>        \n      ")},w={maxWidth:400,className:"relatedPopupOptions",autoClose:!1,closeOnClick:!1,maxHeight:300};return(0,_.jsx)("div",{ref:m,children:(0,_.jsxs)(s.W,{center:[53.3781,-1],zoom:6,zoomAnimation:!0,zoomAnimationThreshold:20,children:[(0,_.jsx)(o.e,{attribution:'\xa9 <a href="https://www.openstreetmap.org/copyright"> OpenStreetMap</a> contributors',url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"}),(0,_.jsx)(k.A,{}),(0,_.jsx)(v.A,{}),(0,_.jsx)(y.A,{setOpenSideBar:r,openSideBar:i,type:"snp_map"}),(0,_.jsx)(x.A,{}),(0,_.jsx)(h.A,{isChecked:e.hotspotLayers}),(0,_.jsx)(f.A,{isChecked:e.countyLayers}),Object.keys(t).length>0&&(0,_.jsx)(b.A,{checkedLayers:t}),(0,_.jsx)(O,{SNPMapDataset:l,openTable:p,mapRef:m}),!p&&(0,_.jsx)(u(),{chunkedLoading:!0,iconCreateFunction:n=>new(c().DivIcon)({html:'<span class="cluster-icon">'.concat(n.getChildCount(),"</span>"),className:"cluster-icon",iconSize:[30,30]}),children:Object.keys(l).filter((n=>"SOI"!==n&&n!==l.SOI)).map(((n,t)=>(0,_.jsx)(a.p,{ref:t=>{null===t||void 0===t||t.bindPopup(S({...l[n]},n),w)},icon:g({...l[n],submission:n},l.SOI),position:[l[n].lat,l[n].lon]},"snp_related_marker_"+t)))}),p&&(0,_.jsx)(_.Fragment,{children:Object.keys(l).filter((n=>"SOI"!==n&&n!==l.SOI)).map(((n,t)=>(0,_.jsx)(a.p,{ref:t=>{null===t||void 0===t||t.bindPopup(S({...l[n]},n),w)},icon:g({...l[n],submission:n},l.SOI),position:[l[n].lat,l[n].lon]},"snp_related_marker_"+t)))}),Object.keys(l).filter((n=>n===l.SOI)).map(((n,t)=>(0,_.jsx)(a.p,{ref:t=>{null===t||void 0===t||t.bindPopup(S({...l[n]},n),w)},icon:g({...l[n],submission:n},l.SOI),position:[l[n].lat,l[n].lon]},"snp_related_marker_"+t)))]})})}}}]);
//# sourceMappingURL=88.8fbb766c.chunk.js.map