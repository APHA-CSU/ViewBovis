{"version":3,"file":"static/js/851.6c55cbb5.chunk.js","mappings":"8NA6BA,MACA,EAAe,IAA0B,4DCWzC,MACA,EAAe,IAA0B,+DCHzC,MACA,EAAe,IAA0B,2DCDzC,MACA,EAAe,IAA0B,mE,0HCnBzC,MAAMA,EAAoBC,EAAAA,MACxBC,IAOO,IAPN,SACCC,EAAQ,eACRC,EAAc,cACdC,EAAa,0BACbC,EAAyB,eACzBC,EAAc,YACdC,GACDN,EAEC,MAAMO,GAASC,EAAAA,EAAAA,UAETC,EAASR,EAASS,KAAOC,OAAOC,OAAOX,EAASS,MAAQ,GACxDG,EAAUJ,EAAOK,KAAKC,GAAQ,CAACA,EAAIC,IAAKD,EAAIE,OAC5CC,EAAehB,EAAeQ,KAChCC,OAAOC,OAAOV,EAAeQ,MAC7B,GACES,EAAgBD,EAAaJ,KAAKC,GAAQ,CAACA,EAAIC,IAAKD,EAAIE,OAGxDG,EAAa,CACjBC,QAAS,IAAIC,EAAAA,KAAK,CAChBC,QAASC,EACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAEnBC,WAAY,IAAIL,EAAAA,KAAK,CACnBC,QAASK,EACTH,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAEnBG,OAAQ,IAAIP,EAAAA,KAAK,CACfC,QAASO,EACTL,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAEnBK,eAAgB,IAAIT,EAAAA,KAAK,CACvBC,QAASS,EACTP,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,OAKfO,EAAcvB,IAElB,IAAIwB,EAAWxB,EAAKyB,KAcpB,MAVe,yBAAbD,EACId,EAAWC,QACE,WAAba,EACAd,EAAWS,OACE,8BAAbK,EACAd,EAAWW,eACE,eAAbG,EACAd,EAAWO,WACXP,EAAWC,OAEE,EAIfe,EAA2BC,GACxB,IAAIC,EAAAA,QAAQ,CACjBC,KAAK,8BAADC,OAAgCH,EAAQI,gBAAe,WAC3DC,UAAW,eACXjB,SAAU,CAAC,GAAI,MAKbkB,EAAe,SAAUC,EAAMnC,EAAQoC,EAAOC,GAClD,MAAM,mCAANN,OAC0BI,EAAKG,WAAU,0NAAAP,OAIoEK,GAAKL,OAAGM,EAAS,4MAAAN,OAC9BK,GAAKL,OAAGM,EAAS,gQAAAN,OAIjDK,GAAKL,OAAGM,EAAS,qOAAAN,OAK9DK,EAAQ,EAAC,QAAAL,OAAO/B,EAAOuC,QAAM,qIAAAR,OAKpC/B,EAAOoC,GAAOI,aAAe,GAAE,GAAAT,OACxB/B,EAAOoC,GAAOI,YAAW,SAC5BxC,EAAOoC,GAAOI,YAAc,IAC5BxC,EAAOoC,GAAOI,aAAe,IAAG,GAAAT,QAC5B/B,EAAOoC,GAAOI,YAAc,GAAGC,QAAQ,GAAE,aAAAV,QACzC/B,EAAOoC,GAAOI,YAAc,KAAKC,QAAQ,GAAE,UAAQ,uJAAAV,OAMvD/B,EAAOoC,GAAOM,QAAO,uIAAAX,OAIrB/B,EAAOoC,GAAOO,SAAQ,6HAAAZ,OAIL,QAAjBI,EAAKS,QAAoB,SAAWT,EAAKS,QAAO,qIAAAb,OAIhD/B,EAAOoC,GAAOS,IAAG,0IAAAd,OAIjB/B,EAAOoC,GAAOV,KAAI,qIAAAK,OAIlB/B,EAAOoC,GAAOU,WAAU,+HAAAf,OAIxBI,EAAKY,WAAU,4HAAAhB,OAIf/B,EAAOoC,GAAOY,OAAM,0HAAAjB,OAIpBI,EAAKc,MAAK,sIAAAlB,OAIgB,MAA1BI,EAAKe,iBAA2B,KAAO,MAAK,8HAAAnB,OAI5C/B,EAAOoC,GAAOe,kBAAiB,oJAAApB,OAKOK,GAAKL,OAAGM,EAAS,sOAAAN,OAKvD/B,EAAO,GAAG6C,IAAG,kIAAAd,OAIbI,EAAKiB,IAAG,mIAAArB,OAIRI,EAAKkB,eAAc,wHAAAtB,OAKf,KAARI,EAAKmB,IAAU,SAEH,KAARnB,EAAKmB,IAAU,iBAEN,0IAAAvB,OAKTI,EAAKoB,gBAAe,oIAAAxB,OAKD,MAAvBI,EAAKqB,eAAsB,aAAAzB,OAEpBI,EAAKqB,gBAAgB,uHAQ1C,EAGMC,EAAqB,CACzBC,SAAU,IACVzB,UAAW,cACX0B,WAAW,EACXC,cAAc,GAIVC,EAAoBA,KACxB,MAAMxD,GAAMyD,EAAAA,EAAAA,OACZC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAoBC,IAAAA,QAAU,CAAEC,SAAU,aAuChD,OArCAF,EAAkBG,MAAQ,KACxB,MAAMC,EAAMH,IAAAA,QAAUI,OAAO,MAAO,+BAgCpC,OA/BAD,EAAIE,mBACF,aAAa,gMAADvC,OAGDhB,EAAU,uKAAAgB,OAIZV,EAAS,8JAAAU,OAIXZ,EAAa,8JAAAY,OAIfR,EAAiB,4JAAAQ,OAIjBwC,EAAAA,EAAkB,0iBAWlBH,CAAG,EAEZJ,EAAkBQ,MAAMnE,GAEjB,KACLA,EAAIoE,cAAcT,EAAkB,CACrC,GACD,EAIEU,EAAsBC,GAAU,CACpC,CACEC,OAAQ,IACRC,OAAQZ,IAAAA,OAASa,UAAU,CACzBC,UAAW,GACXC,SAAS,EACTC,YAAa,CACXC,QAAQ,EACRP,MAAOA,OAMTQ,EAAgBT,EAAmB,WACnCU,EAAiBV,EAAmB,WAGpCW,EAAoBC,IAAoC,IAAnC,SAAEC,EAAQ,MAAEZ,EAAK,SAAET,GAAUoB,EACtD,MAAMjF,GAAMyD,EAAAA,EAAAA,MACN0B,GAAkBzF,EAAAA,EAAAA,QAAO,MACzB0F,GAAoB1F,EAAAA,EAAAA,QAAO,KAEjCgE,EAAAA,EAAAA,YAAU,KACR,IAAK1D,EAAK,OAGV,MAAMqF,EAAWzB,IAAAA,SAAWC,EAAU,CACpCS,UACCH,MAAMnE,GACHsF,EAAa1B,IAAAA,kBAAoByB,EAAU,CAC/CH,aACCf,MAAMnE,GAOT,OAJAmF,EAAgBI,QAAUF,EAC1BD,EAAkBG,QAAUD,EAGrB,KACDH,EAAgBI,UAClBvF,EAAIwF,YAAYL,EAAgBI,SAChCvF,EAAIwF,YAAYJ,EAAkBG,SACpC,CACD,GACD,EAGJ,OACEE,EAAAA,EAAAA,KAAA,OAAKC,IAAKjG,EAAOkG,UACfC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,OAAQ,CAAC,SAAU,GAAIC,KAAM,EAAEJ,SAAA,EAC3CF,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CACRC,YAAY,wFACZC,IAAI,wDAENT,EAAAA,EAAAA,KAACU,EAAoB,CAAC1G,OAAQA,KAC9BgG,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CACZC,UAAW/G,EAAyC,iBAEtDmG,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CAACD,UAAW/G,EAAwC,eAChEO,OAAO0G,KAAKlH,GAAe6C,OAAS,IACnCuD,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACnH,cAAeA,KAE7BoG,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,KACThB,EAAAA,EAAAA,KAACiB,EAAc,CAACvH,SAAUA,EAAUC,eAAgBA,KACpDqG,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,KACVlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CACVrH,eAAgBA,EAChBC,YAAaA,EACb6B,KAAM,cAERoE,EAAAA,EAAAA,KAACoB,EAAAA,EAAe,IACf9G,EAAQ2B,OAAOrB,GAAe6B,OAAS,IAAKuD,EAAAA,EAAAA,KAACjC,EAAiB,KAC/DiC,EAAAA,EAAAA,KAACqB,IAAkB,CACjBC,gBAAc,EACdC,mBAAoB1F,EACpB2F,iBAAkB,EAAEtB,SAEnB5F,EAAQC,KAAI,CAAC6D,EAAU9B,KACtB0D,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CACLxB,IAAMA,GACD,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKyB,UACHtF,EAAa1C,EAAUQ,EAAQoC,EAAM,YAADL,OAAcK,IAClDqB,GAIJS,SAAUA,EACVuD,KAAMjG,EAAWxB,EAAOoC,IAAQ4D,UAEhCF,EAAAA,EAAAA,KAACT,EAAiB,CAEhBE,SAAUJ,EACVR,MAAO,UACPT,SAAU9D,GAAQ,aAAA2B,OAHAK,KAIlB,YAAAL,OATeK,SAavB0D,EAAAA,EAAAA,KAACqB,IAAkB,CACjBC,gBAAc,EACdC,mBAAoB1F,EACpB2F,iBAAkB,EAAEtB,SAEnBtF,EAAcL,KAAI,CAAC6D,EAAU9B,KAC5B0D,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CACLxB,IAAMA,GACD,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKyB,UACHtF,EACEzC,EACAgB,EACA2B,EAAM,aAADL,OACQK,IAEfqB,GAIJS,SAAUA,EACVuD,KAAMjG,EAAWf,EAAa2B,IAAQ4D,UAEtCF,EAAAA,EAAAA,KAACT,EAAiB,CAEhBE,SAAUH,EACVT,MAAO,UACPT,SAAUxD,GAAc,oBAAAqB,OAHCK,KAIzB,aAAAL,OATgBK,YActB,IAKN2E,EAAiBW,IAAmC,IAAlC,SAAElI,EAAQ,eAAEC,GAAgBiI,EAClD,MAAMrH,GAAMyD,EAAAA,EAAAA,MAON6D,EAAiB,IANHnI,EAASS,KACzBC,OAAOC,OAAOX,EAASS,MAAMI,KAAKC,GAAQ,CAACA,EAAIC,IAAKD,EAAIE,OACxD,MACiBf,EAAeQ,KAChCC,OAAOC,OAAOV,EAAeQ,MAAMI,KAAKC,GAAQ,CAACA,EAAIC,IAAKD,EAAIE,OAC9D,IAMJ,OAJAuD,EAAAA,EAAAA,YAAU,KACJ4D,EAAepF,OAAS,GAC1BlC,EAAIuH,UAAU3D,IAAAA,aAAe0D,GAAgBE,IAAI,IAAK,GACvD,CAACrI,EAAUC,KACPqG,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,GAAK,EAGRtB,EAAuBuB,IAAiB,IAAhB,OAAEjI,GAAQiI,EACtC,MAAM1H,GAAMyD,EAAAA,EAAAA,MACNkE,EAAiB,IAAIC,gBAAe,KACpC5H,GAAOP,EAAO8F,SAASvF,EAAI6H,gBAAgB,KAGjDnE,EAAAA,EAAAA,YAAU,KACJjE,EAAO8F,SAASoC,EAAeG,QAAQrI,EAAO8F,SAC3C,KACLoC,EAAeI,YAAY,IAE5B,GAAG,EAER,G","sources":["imgs/holding.svg","imgs/showground.svg","imgs/market.svg","imgs/slaughterhouse.svg","components/CattleMovement/CattleMovementMap.jsx"],"sourcesContent":["var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgHolding(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 103,\n    height: 126,\n    viewBox: \"0 0 103 126\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M83.6875 63C83.6875 91.556 56.013 110.037 51.9863 112.575C51.6771 112.77 51.3229 112.77 51.0137 112.575C46.987 110.037 19.3125 91.556 19.3125 63C19.3125 39.375 34.9084 23.625 51.5 23.625C68.6667 23.625 83.6875 39.375 83.6875 63Z\",\n    fill: \"#222222\",\n    stroke: \"#222222\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.1667 63C68.1667 74.4208 60.6152 83.5 51.5 83.5C42.3847 83.5 34.8333 74.4208 34.8333 63C34.8333 51.5792 42.3847 42.5 51.5 42.5C60.6152 42.5 68.1667 51.5792 68.1667 63Z\",\n    fill: \"white\",\n    stroke: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHolding);\nexport default __webpack_public_path__ + \"static/media/holding.a9f895f6127d2d8f703a7a91b464f56c.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _ellipse, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgShowground(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 103,\n    height: 126,\n    viewBox: \"0 0 103 126\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.013 112.617C54.0284 111.347 61.9582 106.089 69.3846 97.5771C76.8108 89.0652 83.7375 77.2947 83.7375 63C83.7375 39.3549 68.7013 23.575 51.5 23.575C34.8744 23.575 19.2625 39.3543 19.2625 63C19.2625 77.2947 26.1892 89.0652 33.6154 97.5771C41.0418 106.089 48.9716 111.347 50.987 112.617C51.3125 112.822 51.6875 112.822 52.013 112.617Z\",\n    fill: \"#222222\",\n    stroke: \"#222222\",\n    strokeWidth: 0.1\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.1667 63C68.1667 74.4208 60.6153 83.5 51.5 83.5C42.3848 83.5 34.8333 74.4208 34.8333 63C34.8333 51.5792 42.3848 42.5 51.5 42.5C60.6153 42.5 68.1667 51.5792 68.1667 63Z\",\n    fill: \"white\",\n    stroke: \"white\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 51.5,\n    cy: 62.5,\n    rx: 24.5,\n    ry: 29.5,\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7356 53.5297C34.7261 53.535 34.72 53.5436 34.711 53.5495C34.7037 53.5542 34.6951 53.5549 34.688 53.56C34.6759 53.5687 34.6701 53.5817 34.659 53.5913C34.6268 53.6187 34.5988 53.6481 34.5751 53.6816C34.5622 53.6997 34.5505 53.7171 34.5404 53.7364C34.5216 53.7721 34.5092 53.8093 34.4998 53.8484C34.495 53.868 34.4882 53.8863 34.486 53.9063C34.4808 53.9508 34.4849 53.9957 34.4926 54.0412C34.4951 54.0562 34.4933 54.071 34.4972 54.0858C34.4978 54.0878 34.4973 54.0898 34.4978 54.0917C34.5143 54.1504 34.5426 54.2029 34.5777 54.2503C34.5798 54.2532 34.58 54.2568 34.5823 54.2597L36.6842 56.981C36.71 57.9105 36.8453 66.8942 33.0248 78.3467C32.9742 78.499 33.002 78.665 33.0991 78.7944C33.1968 78.9238 33.3526 79 33.518 79H68.482C68.6474 79 68.8032 78.9238 68.9009 78.7944C68.998 78.665 69.0258 78.499 68.9752 78.3467C64.9639 66.3217 65.3554 57.2309 65.3599 57.1405C65.3609 57.1203 65.3523 57.1027 65.3508 57.083L67.5315 54.2597C67.5338 54.2568 67.534 54.2532 67.5361 54.2503C67.5712 54.2029 67.5995 54.1504 67.616 54.0917C67.6165 54.0898 67.6161 54.0878 67.6166 54.0858C67.6205 54.0711 67.6187 54.0563 67.6212 54.0414C67.629 53.9958 67.633 53.9508 67.6279 53.9062C67.6256 53.8862 67.6188 53.868 67.6141 53.8485C67.6046 53.8093 67.5922 53.7721 67.5734 53.7364C67.5633 53.7171 67.5516 53.6998 67.5388 53.6817C67.515 53.6481 67.487 53.6187 67.4548 53.5912C67.4437 53.5817 67.4379 53.5687 67.4258 53.56C67.4188 53.5549 67.4102 53.5542 67.403 53.5496C67.3939 53.5437 67.3878 53.5351 67.3783 53.5297C67.0044 53.3183 66.4101 53.1088 65.5876 52.8192C62.4092 51.6997 56.5225 49.6201 51.631 43.5452L59.1026 42.3177C59.6176 42.2328 59.9777 41.8216 59.9777 41.3172C59.9777 40.8129 59.6181 40.4012 59.1026 40.3163L51.1457 39.0072C50.996 38.9823 50.8412 39.0228 50.7248 39.1175C50.608 39.2128 50.5407 39.3524 50.5407 39.4999V43.4765C45.6379 49.6062 39.717 51.6954 36.5263 52.8192C35.7038 53.1088 35.1094 53.3183 34.7356 53.5297ZM55.8559 53.4609H46.2548C48.754 51.2001 50.32 47.4845 51.0551 45.3749C51.7914 47.4841 53.3579 51.1992 55.8559 53.4609ZM58.5736 78H43.5423C47.1669 73.5075 49.9596 64.0905 51.0579 59.9703C52.1562 64.0905 54.9489 73.5075 58.5736 78ZM52.731 62.0844C55.9851 67.2417 60.8695 72.4888 62.1104 73.792L59.4876 77.5098C56.5501 73.9668 54.0973 66.7436 52.731 62.0844ZM42.6283 77.5098L40.0055 73.792C41.2463 72.4887 46.1307 67.2417 49.3848 62.0844C48.0185 66.7436 45.5657 73.9668 42.6283 77.5098ZM51.0541 57.3056L48.7696 54.4609H53.3386L51.0541 57.3056ZM59.7637 54.4609L57.4784 57.3056L55.1939 54.4609H59.7637ZM46.9146 54.4609L44.6314 57.3051L42.3499 54.4609H46.9146ZM36.0299 54.4609H40.4949L38.2193 57.2953L36.0299 54.4609ZM37.7178 58.3192L37.7959 58.4203C37.8925 58.5458 38.0448 58.62 38.2062 58.6215C38.3873 58.6166 38.5213 58.5512 38.6204 58.4277L41.4223 54.9379L44.2217 58.4277C44.3198 58.5497 44.4711 58.6215 44.6314 58.6215C44.7918 58.6215 44.943 58.5497 45.0406 58.4277L47.842 54.9379L50.3904 58.1107C47.4779 64.6 39.0541 73.313 38.9675 73.4018C38.8015 73.5727 38.7808 73.832 38.9174 74.0254L41.7211 78H34.2257C37.1757 68.8766 37.6558 61.3665 37.7178 58.3192ZM67.7743 78H60.3947L63.1985 74.0254C63.335 73.832 63.3143 73.5727 63.1484 73.4018C63.0617 73.3129 54.6336 64.5968 51.7228 58.1046L54.2662 54.9374L57.0691 58.4277C57.1673 58.5502 57.318 58.6215 57.4784 58.6215C57.6387 58.6215 57.7895 58.5502 57.8876 58.4277L60.6915 54.9374L63.4934 58.4277C63.5915 58.5502 63.7428 58.6215 63.9026 58.6215C63.9041 58.6215 63.9056 58.6215 63.9077 58.6215C64.0682 58.62 64.2194 58.5461 64.3161 58.4218C64.3583 61.3368 64.7913 68.7777 67.7743 78ZM66.0839 54.4609L63.8945 57.2953L61.619 54.4609H66.0839ZM64.3948 53.4609H57.4936C54.9833 51.802 53.2802 48.2903 52.3644 45.9231C56.67 50.4248 61.4896 52.4117 64.3948 53.4609ZM51.5767 40.0946L58.9286 41.3319L51.5767 42.5394V40.0946ZM49.7456 45.9275C48.831 48.2942 47.1299 51.8022 44.6167 53.4604L44.6162 53.4608H37.719C40.6233 52.412 45.4408 50.4261 49.7456 45.9275Z\",\n    fill: \"black\",\n    stroke: \"black\",\n    strokeWidth: 0.7\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgShowground);\nexport default __webpack_public_path__ + \"static/media/showground.8d58ce9f7f17a7f61aad975c0747eb64.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _ellipse, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMarket(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 103,\n    height: 126,\n    viewBox: \"0 0 103 126\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.013 112.617C54.0284 111.347 61.9582 106.089 69.3846 97.5771C76.8108 89.0652 83.7375 77.2947 83.7375 63C83.7375 39.3549 68.7013 23.575 51.5 23.575C34.8744 23.575 19.2625 39.3543 19.2625 63C19.2625 77.2947 26.1892 89.0652 33.6154 97.5771C41.0418 106.089 48.9716 111.347 50.987 112.617C51.3125 112.822 51.6875 112.822 52.013 112.617Z\",\n    fill: \"#222222\",\n    stroke: \"#222222\",\n    strokeWidth: 0.1\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.1667 63C68.1667 74.4208 60.6153 83.5 51.5 83.5C42.3848 83.5 34.8333 74.4208 34.8333 63C34.8333 51.5792 42.3848 42.5 51.5 42.5C60.6153 42.5 68.1667 51.5792 68.1667 63Z\",\n    fill: \"white\",\n    stroke: \"white\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 51.5,\n    cy: 62.5,\n    rx: 24.5,\n    ry: 29.5,\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.5847 57.4726H56.9068V62.8483H50.433C50.3496 64.1127 50.1026 65.2526 49.6829 66.2707C49.3466 67.0426 48.784 67.8477 47.9952 68.6833C48.8941 68.5007 49.668 68.4066 50.3109 68.4066C51.1354 68.4066 52.204 68.5533 53.5226 68.8438C55.3263 69.2256 56.7669 69.4192 57.8474 69.4192C58.7284 69.4192 59.4964 69.3501 60.1453 69.2117C60.8031 69.0734 61.6603 68.7829 62.714 68.3402L66 75.0467C64.4106 75.7826 63.0086 76.2945 61.7972 76.5795C60.5947 76.8617 59.3029 77 57.9159 77C56.4008 77 54.6774 76.7538 52.7249 76.2641C50.171 75.6139 48.5905 75.2376 47.9714 75.1297C47.3612 75.0301 46.7034 74.9775 45.995 74.9775C43.9204 74.9775 41.6285 75.6498 39.1253 77L36 70.6117C39.3932 68.3596 41.0898 66.1103 41.0898 63.8582C41.0898 63.7364 41.0719 63.3989 41.0392 62.8483H36V57.4726H39.6075C38.9973 55.5055 38.6431 54.3573 38.5687 54.0419C38.4705 53.566 38.4199 52.9767 38.4199 52.274C38.4199 50.4065 38.9557 48.7298 40.0272 47.2441C41.0898 45.7584 42.4977 44.6794 44.2449 44.0126C45.9921 43.3375 48.3405 43 51.2962 43C54.0643 43 56.255 43.2905 57.8682 43.866C59.4845 44.4387 60.8537 45.396 61.9639 46.7295C63.083 48.0686 63.851 49.6844 64.2707 51.5851L55.0287 52.9242C54.5673 51.3305 54.0316 50.2737 53.4303 49.7535C52.8291 49.2334 52.1445 48.9733 51.3795 48.9733C50.4479 48.9733 49.6978 49.2555 49.1233 49.8227C48.5459 50.3899 48.2572 51.1922 48.2572 52.2353C48.2572 52.7941 48.3137 53.3226 48.4298 53.8344C48.537 54.3545 48.9239 55.5664 49.5847 57.4726Z\",\n    fill: \"#222222\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMarket);\nexport default __webpack_public_path__ + \"static/media/market.cd9cb3f068fd2d9aab513c4b36ad916d.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _ellipse, _path3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSlaughterhouse(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 103,\n    height: 126,\n    viewBox: \"0 0 103 126\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.013 112.617C54.0284 111.347 61.9582 106.089 69.3846 97.5771C76.8108 89.0652 83.7375 77.2947 83.7375 63C83.7375 39.3549 68.7013 23.575 51.5 23.575C34.8744 23.575 19.2625 39.3543 19.2625 63C19.2625 77.2947 26.1892 89.0652 33.6154 97.5771C41.0418 106.089 48.9716 111.347 50.987 112.617C51.3125 112.822 51.6875 112.822 52.013 112.617Z\",\n    fill: \"#222222\",\n    stroke: \"#222222\",\n    strokeWidth: 0.1\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.1667 63C68.1667 74.4208 60.6152 83.5 51.5 83.5C42.3847 83.5 34.8333 74.4208 34.8333 63C34.8333 51.5792 42.3847 42.5 51.5 42.5C60.6152 42.5 68.1667 51.5792 68.1667 63Z\",\n    fill: \"white\",\n    stroke: \"white\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 51.5,\n    cy: 62.5,\n    rx: 24.5,\n    ry: 29.5,\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.0318 40.9482C50.9219 40.9704 50.8156 41.0144 50.7224 41.0809C50.5358 41.2131 50.4139 41.4192 50.3875 41.6467C50.3786 41.7262 49.4026 49.7731 44.8221 62.1051C44.7639 62.2618 44.6949 62.4383 44.6179 62.6284L49.9036 65.7483C50.6604 64.9214 51.0159 65.0435 51.0215 65.0449C55.1367 66.8036 55.968 67.1868 55.976 67.1899C56.1695 67.2798 56.3924 67.2896 56.5936 67.2163L56.5966 67.2152C56.799 67.1407 58.9104 67.4119 59 67.2163C64.2026 55.9297 64.5847 44.8136 64.6087 44.707C64.6328 44.6005 64.4271 43.8478 63.9939 43.7515L51.3653 40.9507C51.2544 40.9259 51.1418 40.9259 51.0318 40.9482ZM53.3276 45.2484C53.9563 45.0196 54.6519 45.3428 54.8801 45.9698C55.1083 46.5969 54.7833 47.2916 54.1545 47.5204C53.5258 47.7492 52.8303 47.426 52.6021 46.799C52.3738 46.1719 52.6989 45.4773 53.3276 45.2484ZM43.9773 64.1263C42.6045 67.2229 40.2438 72.0423 38.8382 74.9116C38.2666 76.0794 37.8307 76.9675 37.644 77.3665C37.3112 78.0777 37.4434 78.8152 38.02 79.4424C39.2995 80.8361 42.9664 81.6104 43.6794 81.3509C44.6263 81.0062 44.6642 80.0319 44.7081 78.9027C44.7638 77.4965 44.8479 75.3706 46.2108 72.4594L46.4246 71.9946C46.7403 71.3051 47.3024 70.0823 47.6514 69.3755C48.136 68.3938 48.5611 67.642 48.936 67.0536L43.9773 64.1263Z\",\n    fill: \"#222222\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSlaughterhouse);\nexport default __webpack_public_path__ + \"static/media/slaughterhouse.5eda9a7d69fbd0ab1e007c1a7460e90b.svg\";\nexport { ForwardRef as ReactComponent };","import { MapContainer, TileLayer, Marker, useMap } from \"react-leaflet\";\nimport { Icon, divIcon } from \"leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport holdingImg from \"../../imgs/holding.svg\";\nimport showgroundImg from \"../../imgs/showground.svg\";\nimport marketImg from \"../../imgs/market.svg\";\nimport slaughterhouseImg from \"../../imgs/slaughterhouse.svg\";\nimport movementClusterImg from \"../../imgs/movementCluster.svg\";\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-polylinedecorator\";\nimport RiskLayers from \"./../Layers/RiskLayers\";\nimport CountyLayers from \"../Layers/CountyLayers\";\nimport HotspotLayers from \"../Layers/HotspotLayers\";\nimport \"bootstrap/js/dist/tab\";\nimport HideSidebar from \"../MapControls/HideSidebar\";\nimport MeasurementTool from \"../MapControls/MeasurementTool\";\nimport ResetView from \"../MapControls/ResetView\";\nimport BaseMaps from \"../MapControls/Basemaps\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst CattleMovementMap = React.memo(\n  ({\n    jsonData,\n    secondJsonData,\n    checkedLayers,\n    useCountyandHotspotLayers,\n    setOpenSideBar,\n    openSideBar,\n  }) => {\n    // if jsonData or secondJsonData is null or undefined, return a placeholder map\n    const mapRef = useRef();\n    // Extract movement data from json objects into arrays\n    const movArr = jsonData.move ? Object.values(jsonData.move) : [];\n    const linePts = movArr.map((arr) => [arr.lat, arr.lon]);\n    const secondMovArr = secondJsonData.move\n      ? Object.values(secondJsonData.move)\n      : [];\n    const secondLinePts = secondMovArr.map((arr) => [arr.lat, arr.lon]);\n\n    //Object to store marker icons\n    const customIcon = {\n      holding: new Icon({\n        iconUrl: holdingImg,\n        iconSize: [40, 40],\n        iconAnchor: [20, 35],\n      }),\n      showground: new Icon({\n        iconUrl: showgroundImg,\n        iconSize: [40, 40],\n        iconAnchor: [20, 35],\n      }),\n      market: new Icon({\n        iconUrl: marketImg,\n        iconSize: [40, 40],\n        iconAnchor: [20, 35],\n      }),\n      slaughterhouse: new Icon({\n        iconUrl: slaughterhouseImg,\n        iconSize: [40, 40],\n        iconAnchor: [20, 35],\n      }),\n    };\n\n    //Function to render the correct marker icon\n    const renderIcon = (move) => {\n      // Extract location type from movement array\n      let moveType = move.type;\n\n      // Return the correct cow icon given the location type\n      const iconToReturn =\n        moveType === \"Agricultural Holding\"\n          ? customIcon.holding\n          : moveType === \"Market\"\n          ? customIcon.market\n          : moveType === \"Slaughterhouse (Red Meat)\"\n          ? customIcon.slaughterhouse\n          : moveType === \"Showground\"\n          ? customIcon.showground\n          : customIcon.holding;\n\n      return iconToReturn;\n    };\n\n    //Movement cluster icon\n    const createCustomClusterIcon = (cluster) => {\n      return new divIcon({\n        html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\n        className: \"cluster-icon\",\n        iconSize: [30, 30],\n      });\n    };\n\n    //Function to create HTML popup content using template literal\n    const popupContent = function (data, movArr, index, lineIndex) {\n      return `\n    <div class=\"fs-5 fw-bold\">${data.identifier}</div><br>\n    <div>\n      <nav>\n        <div class=\"nav nav-tabs\" id=\"popupNav\" role=\"tablist\">\n          <button class=\"nav-link active\" id=\"navSummary\" data-bs-toggle=\"tab\" data-bs-target=\"#navSummaryContent${index}${lineIndex}\" type=\"button\" role=\"tab\" aria-controls=\"navSummaryContent\" aria-selected=\"true\">Summary</button>\n          <button class=\"nav-link\" id=\"navInfo\" data-bs-toggle=\"tab\" data-bs-target=\"#navInfoContent${index}${lineIndex}\" type=\"button\" role=\"tab\" aria-controls=\"navInfoContent\" aria-selected=\"false\">Animal</button>\n        </div>\n      </nav>\n      <div class=\"tab-content\" id=\"popTabContent\">     \n        <div class=\"tab-pane fade show active\" id=\"navSummaryContent${index}${lineIndex}\" role=\"tabpanel\" aria-labelledby=\"navSummary\" tabindex=\"0\">\n          <table class=\"table table-striped\">\n            <tbody>\n              <tr>\n                <td><strong>Movement:</strong></td>\n                <td>${`${index + 1} of ${movArr.length}`}</td>\n              </tr>\n              <tr>\n                <td><strong>Duration of Stay:</strong></td>\n                <td>${\n                  movArr[index].stay_length <= 30\n                    ? `${movArr[index].stay_length} days`\n                    : movArr[index].stay_length > 30 &&\n                      movArr[index].stay_length <= 365\n                    ? `${(movArr[index].stay_length / 7).toFixed(0)} weeks`\n                    : `${(movArr[index].stay_length / 365).toFixed(1)} years`\n                }\n                </td> \n              </tr>\n              <tr>\n                <td><strong>Date of Arrival:</strong></td>\n                <td>${movArr[index].on_date}</td> \n              </tr>\n              <tr>\n                <td><strong>Date of Departure:</strong></td>\n                <td>${movArr[index].off_date}</td> \n              </tr>\n              <tr>\n                <td><strong>Species:</strong></td>\n                <td>${data.species === \"COW\" ? \"Bovine\" : data.species}</td>\n              </tr>\n              <tr>\n                <td><strong>Precise Location:</strong></td>\n                <td>${movArr[index].cph}</td>\n              </tr>\n              <tr>\n                <td><strong>Precise Location Type:</strong></td>\n                <td>${movArr[index].type}</td>\n              </tr>\n              <tr>\n                <td><strong>OS Map Reference:</strong></td>\n                <td>${movArr[index].os_map_ref}</td>\n              </tr>\n              <tr>\n                <td><strong>Submission:</strong></td>\n                <td>${data.submission}</td> \n              </tr>\n              <tr>\n                <td><strong>County:</strong></td>\n                <td>${movArr[index].county}</td>\n              </tr>\n              <tr>\n                <td><strong>Clade:</strong></td>\n                <td>${data.clade}</td>\n              </tr>\n              <tr>\n                <td><strong>Out of Home Range:</strong></td>\n                <td>${data.out_of_homerange === \"N\" ? \"No\" : \"Yes\"}</td>\n              </tr>\n              <tr>\n                <td><strong>Risk Area:</strong></td>\n                <td>${movArr[index].risk_area_current}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"tab-pane fade show\" id=\"navInfoContent${index}${lineIndex}\" role=\"tabpanel\" aria-labelledby=\"navInfo\" tabindex=\"0\">\n          <table class=\"table table-striped\">\n            <tbody>\n              <tr>\n                <td><strong>Birth Location:</strong></td>\n                <td>${movArr[0].cph}</td>\n              </tr>\n              <tr>\n                <td><strong>Date of Birth:</strong></td>\n                <td>${data.dob}</td>\n              </tr>\n              <tr>\n                <td><strong>Slaughter Date:</strong></td>\n                <td>${data.slaughter_date}</td>\n              </tr>\n              <tr>\n                <td><strong>Sex:</strong></td>\n                <td>${\n                  data.sex == `F`\n                    ? `Female`\n                    : data.sex == `M`\n                    ? `Male`\n                    : `Unknown`\n                }</td>\n              </tr> \n              <tr>\n                <td><strong>Disclosing Test Type:</strong></td>\n                <td>${data.disclosing_test}</td>\n              </tr> \n              <tr>\n                <td><strong>Import Country:</strong></td>\n                <td>${\n                  data.import_country == null\n                    ? `British`\n                    : `${data.import_country}`\n                }</td>\n              </tr> \n            </tbody>\n          </table>\n        </div>\n      </div>           \n    `;\n    };\n\n    // Custom popup options (https://leafletjs.com/reference.html#popup)\n    const samplePopupOptions = {\n      maxWidth: 400, // in pixels\n      className: \"cattlePopup\",\n      autoClose: false,\n      closeOnClick: false,\n    };\n\n    //Icons legend\n    const CattleIconsLegend = () => {\n      const map = useMap();\n      useEffect(() => {\n        const cattleIconsLegend = L.control({ position: \"topright\" });\n\n        cattleIconsLegend.onAdd = () => {\n          const div = L.DomUtil.create(\"div\", \"leaflet-control leaflet-bar\");\n          div.insertAdjacentHTML(\n            \"afterbegin\",\n            `<div class=\"icons-legend\"> <span class=\"fs-6\" style=\"padding-left:6px;\"><strong>Legend</strong></span>\n            <span style=\"display: flex; align-items: center;\">\n            <img src=${holdingImg} class=\"legend-marker-img\">\n            <span>Holding</span>\n          </span>\n          <span style=\"display: flex; align-items: center;\">\n          <img src=${marketImg} class=\"legend-marker-img\">\n          <span>Market</span>\n        </span>\n        <span style=\"display: flex; align-items: center;\">\n        <img src=${showgroundImg} class=\"legend-marker-img\">\n        <span>Showground</span>\n        </span>\n        <span style=\"display: flex; align-items: center;\">\n      <img src=${slaughterhouseImg} class=\"legend-marker-img\">\n      <span>Slaughterhouse</span>\n      </span>\n      <span style=\"display: flex; align-items: center;\">\n      <img src=${movementClusterImg} class=\"legend-marker-img\">\n      <span>Movement cluster</span>\n      </span>\n      <span style=\"display: flex; align-items: center;\">\n      <svg style=\"margin-left: 5px;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"#0096FF\" class=\"bi bi-caret-right-fill\" viewBox=\"0 0 16 16\">\n        <path d=\"m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z\"/>\n      </svg>\n      <span  style=\"padding-left:10px;\">Cattle movement lines</span>\n    </span>\n          </div>`\n          );\n          return div;\n        };\n        cattleIconsLegend.addTo(map);\n        // Cleanup function to remove the legend when the component unmounts\n        return () => {\n          map.removeControl(cattleIconsLegend);\n        };\n      });\n    };\n\n    // Leaflet polylineDecorator patterns\n    const createArrowPattern = (color) => [\n      {\n        repeat: 100,\n        symbol: L.Symbol.arrowHead({\n          pixelSize: 15,\n          polygon: true,\n          pathOptions: {\n            stroke: true,\n            color: color,\n          },\n        }),\n      },\n    ];\n    //\n    const firstMovArrow = createArrowPattern(\"#0096FF\");\n    const secondMovArrow = createArrowPattern(\"#cb181d\");\n\n    //Function for movement lines, arrows, and map bounds\n    const PolylineDecorator = ({ patterns, color, position }) => {\n      const map = useMap();\n      const prevPolylineRef = useRef(null);\n      const prevDecoratorsRef = useRef([]);\n\n      useEffect(() => {\n        if (!map) return;\n\n        //Create new polyline & decorators and add it to the map\n        const polyline = L.polyline(position, {\n          color,\n        }).addTo(map);\n        const decorators = L.polylineDecorator(polyline, {\n          patterns,\n        }).addTo(map);\n\n        // Update prevPolylineRef & prevDecoratorsRef values to the current polyline & decorators values\n        prevPolylineRef.current = polyline;\n        prevDecoratorsRef.current = decorators;\n\n        // Remove previous polyline and decorators on component re-render (new sample search)\n        return () => {\n          if (prevPolylineRef.current) {\n            map.removeLayer(prevPolylineRef.current);\n            map.removeLayer(prevDecoratorsRef.current);\n          }\n        };\n      });\n    };\n\n    return (\n      <div ref={mapRef}>\n        <MapContainer center={[53.3781, -1]} zoom={6}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <ActionResizeObserver mapRef={mapRef} />\n          <HotspotLayers\n            isChecked={useCountyandHotspotLayers[\"hotspotLayers\"]}\n          />\n          <CountyLayers isChecked={useCountyandHotspotLayers[\"countyLayers\"]} />\n          {Object.keys(checkedLayers).length > 0 && (\n            <RiskLayers checkedLayers={checkedLayers} />\n          )}\n          <BaseMaps />\n          <FitMapToBounds jsonData={jsonData} secondJsonData={secondJsonData} />\n          <ResetView />\n          <HideSidebar\n            setOpenSideBar={setOpenSideBar}\n            openSideBar={openSideBar}\n            type={\"movement\"}\n          />\n          <MeasurementTool />\n          {linePts.concat(secondLinePts).length > 0 && <CattleIconsLegend />}\n          <MarkerClusterGroup\n            chunkedLoading\n            iconCreateFunction={createCustomClusterIcon}\n            maxClusterRadius={0}\n          >\n            {linePts.map((position, index) => (\n              <Marker\n                ref={(ref) =>\n                  ref?.bindPopup(\n                    popupContent(jsonData, movArr, index, `firstMov-${index}`),\n                    samplePopupOptions\n                  )\n                }\n                key={`firstMov-${index}`}\n                position={position}\n                icon={renderIcon(movArr[index])}\n              >\n                <PolylineDecorator\n                  key={`decorator-${index}`}\n                  patterns={firstMovArrow}\n                  color={\"#0096FF\"}\n                  position={linePts}\n                />\n              </Marker>\n            ))}\n          </MarkerClusterGroup>\n          <MarkerClusterGroup\n            chunkedLoading\n            iconCreateFunction={createCustomClusterIcon}\n            maxClusterRadius={0}\n          >\n            {secondLinePts.map((position, index) => (\n              <Marker\n                ref={(ref) =>\n                  ref?.bindPopup(\n                    popupContent(\n                      secondJsonData,\n                      secondMovArr,\n                      index,\n                      `secondMov-${index}`\n                    ),\n                    samplePopupOptions\n                  )\n                }\n                key={`secondMov-${index}`}\n                position={position}\n                icon={renderIcon(secondMovArr[index])}\n              >\n                <PolylineDecorator\n                  key={`second-decorator-${index}`}\n                  patterns={secondMovArrow}\n                  color={\"#cb181d\"}\n                  position={secondLinePts}\n                />\n              </Marker>\n            ))}\n          </MarkerClusterGroup>\n        </MapContainer>\n      </div>\n    );\n  }\n);\n//Function to zoom in on the markers and add padding so all points visible\nconst FitMapToBounds = ({ jsonData, secondJsonData }) => {\n  const map = useMap();\n  const firstLatLon = jsonData.move\n    ? Object.values(jsonData.move).map((arr) => [arr.lat, arr.lon])\n    : [];\n  const secondLatLon = secondJsonData.move\n    ? Object.values(secondJsonData.move).map((arr) => [arr.lat, arr.lon])\n    : [];\n  const combinedLatLon = [...firstLatLon, ...secondLatLon];\n  useEffect(() => {\n    if (combinedLatLon.length > 0)\n      map.fitBounds(L.latLngBounds(combinedLatLon).pad(0.1));\n  }, [jsonData, secondJsonData]);\n  return <></>;\n};\n\nconst ActionResizeObserver = ({ mapRef }) => {\n  const map = useMap();\n  const resizeObserver = new ResizeObserver(() => {\n    if (map && mapRef.current) map.invalidateSize();\n  });\n\n  useEffect(() => {\n    if (mapRef.current) resizeObserver.observe(mapRef.current);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n};\nexport default CattleMovementMap;\n"],"names":["CattleMovementMap","React","_ref","jsonData","secondJsonData","checkedLayers","useCountyandHotspotLayers","setOpenSideBar","openSideBar","mapRef","useRef","movArr","move","Object","values","linePts","map","arr","lat","lon","secondMovArr","secondLinePts","customIcon","holding","Icon","iconUrl","holdingImg","iconSize","iconAnchor","showground","showgroundImg","market","marketImg","slaughterhouse","slaughterhouseImg","renderIcon","moveType","type","createCustomClusterIcon","cluster","divIcon","html","concat","getChildCount","className","popupContent","data","index","lineIndex","identifier","length","stay_length","toFixed","on_date","off_date","species","cph","os_map_ref","submission","county","clade","out_of_homerange","risk_area_current","dob","slaughter_date","sex","disclosing_test","import_country","samplePopupOptions","maxWidth","autoClose","closeOnClick","CattleIconsLegend","useMap","useEffect","cattleIconsLegend","L","position","onAdd","div","create","insertAdjacentHTML","movementClusterImg","addTo","removeControl","createArrowPattern","color","repeat","symbol","arrowHead","pixelSize","polygon","pathOptions","stroke","firstMovArrow","secondMovArrow","PolylineDecorator","_ref2","patterns","prevPolylineRef","prevDecoratorsRef","polyline","decorators","current","removeLayer","_jsx","ref","children","_jsxs","MapContainer","center","zoom","TileLayer","attribution","url","ActionResizeObserver","HotspotLayers","isChecked","CountyLayers","keys","RiskLayers","BaseMaps","FitMapToBounds","ResetView","HideSidebar","MeasurementTool","MarkerClusterGroup","chunkedLoading","iconCreateFunction","maxClusterRadius","Marker","bindPopup","icon","_ref3","combinedLatLon","fitBounds","pad","_Fragment","_ref4","resizeObserver","ResizeObserver","invalidateSize","observe","disconnect"],"sourceRoot":""}