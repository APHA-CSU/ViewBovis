{"mappings":"AAAA;AAEA,kBAAkB,GAClB,EAAE,SAAS,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC;IAC7B,SAAS;QACP,WAAW;IACb;IAEA,YAAY,SAAS,IAAI,EAAE,OAAO,EAAE;QAClC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;QACxB,IAAI,OAAO,OAAO;YAChB,4BAA4B,GAC5B,IAAI,CAAC,QAAQ,aAAa,EACxB,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,SAAS,QAAQ,MAAM,oBAAoB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;iBAEzF,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,SAAS,QAAQ,oBAAoB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;SAGtF;QACD,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE;YACxC,UAAU,EAAE;QACd,GAAG;QACH,IAAI,CAAC,WAAW,CAAC;IACnB;IAEA,aAAa,SAAS,IAAI,EAAE;QAC1B,IAAI,OAAO,IAAI;QACf,IAAI,CAAC,IAAI,CAAC;QACV,IAAI,OAAO,SAAS,YAAY,CAAE,CAAA,gBAAgB,IAAG,GAAI;YACvD,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC;YACV,OAAO;QACT,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,MAAM,IAAI,CAAC,SAAS,IAAI,EAAE;gBAC5B,KAAK,OAAO,CAAC;gBACb,KAAK,IAAI,CAAC;YACZ,GAAG,KAAK,CAAC,SAAS,GAAG,EAAE;gBACrB,KAAK,IAAI,CAAC,cAAc;YAC1B;YACA,OAAO,IAAI;QACb,CAAC;QACD,IAAI;QACJ,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAC3B,UAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YAAC;SAAK;aAEvC,UAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAGxC,QAAQ,IAAI,CAAC,SAAS,IAAI,EAAE;YAC1B,KAAK,OAAO,CAAC;YACb,KAAK,IAAI,CAAC;YACV,KAAK,MAAM,CAAC,KAAK;QACnB,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,SAAS,GAAG,EAAE;YACnC,KAAK,IAAI,CAAC,cAAc;QAC1B;QACA,OAAO,IAAI;IACb;AACF;AAEA,EAAE,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC9B,OAAO,IAAI,EAAE,SAAS,CAAC,GAAG,GAAG;AAC/B","sources":["src/js/leaflet.shpfile.js"],"sourcesContent":["'use strict';\r\n\r\n/* global cw, shp */\r\nL.Shapefile = L.GeoJSON.extend({\r\n  options: {\r\n    importUrl: 'shp.js'\r\n  },\r\n\r\n  initialize: function(file, options) {\r\n    L.Util.setOptions(this, options);\r\n    if (typeof cw !== 'undefined') {\r\n      /*eslint-disable no-new-func*/\r\n      if (!options.isArrayBuffer) {\r\n        this.worker = cw(new Function('data', 'cb', 'importScripts(\"' + this.options.importUrl + '\");shp(data).then(cb);'));\r\n      } else {\r\n        this.worker = cw(new Function('data', 'importScripts(\"' + this.options.importUrl + '\"); return shp.parseZip(data);'));\r\n      }\r\n      /*eslint-enable no-new-func*/\r\n    }\r\n    L.GeoJSON.prototype.initialize.call(this, {\r\n      features: []\r\n    }, options);\r\n    this.addFileData(file);\r\n  },\r\n\r\n  addFileData: function(file) {\r\n    var self = this;\r\n    this.fire('data:loading');\r\n    if (typeof file !== 'string' && !('byteLength' in file)) {\r\n      var data = this.addData(file);\r\n      this.fire('data:loaded');\r\n      return data;\r\n    }\r\n    if (!this.worker) {\r\n      shp(file).then(function(data) {\r\n        self.addData(data);\r\n        self.fire('data:loaded');\r\n      }).catch(function(err) {\r\n        self.fire('data:error', err);\r\n      })\r\n      return this;\r\n    }\r\n    var promise;\r\n    if (this.options.isArrayBufer) {\r\n      promise = this.worker.data(file, [file]);\r\n    } else {\r\n      promise = this.worker.data(cw.makeUrl(file));\r\n    }\r\n\r\n    promise.then(function(data) {\r\n      self.addData(data);\r\n      self.fire('data:loaded');\r\n      self.worker.close();\r\n    }).then(function() {}, function(err) {\r\n      self.fire('data:error', err);\r\n    })\r\n    return this;\r\n  }\r\n});\r\n\r\nL.shapefile = function(a, b, c) {\r\n  return new L.Shapefile(a, b, c);\r\n};"],"names":[],"version":3,"file":"index.696484de.js.map","sourceRoot":"/__parcel_source_root/"}